 import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: CalculatorApp(),
  ));
}

class CalculatorApp extends StatefulWidget {
  @override
  CalculatorAppState createState() => CalculatorAppState();
}

class CalculatorAppState extends State<CalculatorApp> {
  double operand1 = 0; //Operador 1
  double operand2 = 0; //Operador 2
  String operation; //Tipo de operador
  String calculation = "0"; //Resultado


    void onPressOfButton(String text) {
      //realizado
    if (text == "C") {
      calculation = "0";
      operand1 = 0;
      operand2 = 0; //Borra los valores de los operandos 1 y 2 y del resultado
    } else if (text == "/" || text == "+" || text == "-" || text == "x") {
      operand1 = double.parse(calculation); //Toma los valores del operando1
      calculation = "";
      operation = text;
    } else if (text == "=") {
      operand2 = double.parse(calculation); //Toma los valores del operando2
      if (operation == "/") {
        calculation = (operand1 / operand2).toString(); //Realiza la division
      }
      if (operation == "x") {
        calculation =
            (operand1 * operand2).toString(); //Realiza la multiplicación
      }
      if (operation == "-") {
        calculation = (operand1 - operand2).toString(); //Realiza la resta
      }
      if (operation == "+") {
        calculation = (operand1 + operand2).toString(); //Realiza la suma
      }
    } else {
      calculation = int.parse(calculation + text)
          .toString(); //Concatena los números del operando1 y 2
    }
    setState(() {
      text = calculation;
    });
  }
  //Realizado
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Card(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Padding(
                padding: EdgeInsets.all(16),
                child: Align(
                  alignment: Alignment.centerRight,
                  child: Text(calculation, style: TextStyle(fontSize: 30)),
                )),
            Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[
                  //Componente boton
                     CalcButton(text: "7", callback:                 (){
                       onPressOfButton ("7");
                  }),
                  //Componente boton
                    CalcButton(text: "8", callback:                 (){
                       onPressOfButton ("8");
                  }),

                  //Componente boton
                   CalcButton(text: "9", callback:                 (){
                       onPressOfButton ("9");
                  }),

                  //Componente boton
                    CalcButton(text: "%", callback:                 (){
                       onPressOfButton ("%");
                  }),


                ]),
            
            
             Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[
                  //Componente boton
                    CalcButton(text: "4", callback:                 (){
                       onPressOfButton ("4");
                  }),
                  //Componente boton
                    CalcButton(text: "5", callback:                 (){
                       onPressOfButton ("5");
                  }),

                  //Componente boton
                    CalcButton(text: "6", callback:                 (){
                       onPressOfButton ("6");
                  }),

                  //Componente boton
                    CalcButton(text: "+", callback:                 (){
                       onPressOfButton ("+");
                  }),


                ]),
            
             Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[
                  //Componente boton
                     CalcButton(text: "1", callback:                 (){
                       onPressOfButton ("1");
                  }),
                  //Componente boton
                    CalcButton(text: "2", callback:                 (){
                       onPressOfButton ("2");
                  }),

                  //Componente boton
                    CalcButton(text: "3", callback:                 (){
                       onPressOfButton ("3");
                  }),

                  //Componente boton
                   CalcButton(text: "-", callback:                 (){
                       onPressOfButton ("-");
                  }),


                ]),
            
             Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[
                  //Componente boton
                   CalcButton(text: "0", callback:                 (){
                       onPressOfButton ("0");
                  }),
                  //Componente boton
                  CalcButton(text: "C", callback:                 (){
                       onPressOfButton ("C");
                  }),
                  //Componente boton
                    CalcButton(text: "=", callback:                 (){
                       onPressOfButton ("=");
                  }),

                  //Componente boton
                  CalcButton(text: "x", callback:                 (){
                       onPressOfButton ("x");
                  }),


                ]),

          ],
        ),
      ),
    );
  }
}

class CalcButton extends StatelessWidget {
  final Function callback;
  final String text;
  
  const CalcButton ( {Key key, @required this.text, @required this.callback}): super (key: key);
  
  @override
Widget build (BuildContext context){
  return
    Container(
      padding: EdgeInsets.all(2.0),
      child: RaisedButton(
      child: Text (
      this.text,
      style: TextStyle (color: 
Colors.black),
      ),
      color: Colors.grey,
      
      onPressed: callback,
      ));
  }
}